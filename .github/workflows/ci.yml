name: ci

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  UV_VERSION: "0.6.5"
  PYTHONPATH: "src"
  PYTHONUNBUFFERED: 1
  UV_CACHE_DIR: /tmp/.uv-cache

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    environment: production
    permissions:
      contents: read
      packages: write
      checks: write
      pull-requests: write
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Read Python version from pyproject.toml
        id: python-version
        run: |
          echo "version=$(grep '^python = ' pyproject.toml | cut -d'"' -f2)" >> $GITHUB_OUTPUT
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python-version.outputs.version }}
      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/${{ env.UV_VERSION }}/install.sh | sh
      - uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}
      - name: Install dependencies
        run: uv sync --all-extras --dev --frozen
      - name: Run tests
        run: |
          mkdir -p test-results
          uv run pytest tests --cov=src --junitxml=test-results/junit.xml
      - name: Minimize cache
        run: uv cache prune --ci
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-results/junit.xml
          check_name: Test Results
          comment_mode: always
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30
